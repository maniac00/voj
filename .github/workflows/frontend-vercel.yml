name: Deploy Frontend to Vercel

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-vercel.yml'
  workflow_dispatch:
    inputs:
      apiUrl:
        description: "Override NEXT_PUBLIC_API_URL (optional)"
        required: false
      apiBase:
        description: "Override NEXT_PUBLIC_API_BASE (optional)"
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write Vercel project config
        run: |
          mkdir -p .vercel
          cat > .vercel/project.json << 'EOF'
          {
            "orgId": "${{ env.VERCEL_ORG_ID }}",
            "projectId": "${{ env.VERCEL_PROJECT_ID }}"
          }
          EOF

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci || npm install --legacy-peer-deps

      - name: Pull Vercel environment information
        run: npx vercel pull --yes --environment=production --token=${{ env.VERCEL_TOKEN }}

      - name: Build
        env:
          NEXT_PUBLIC_API_URL: ${{ github.event.inputs.apiUrl || secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_API_BASE: ${{ github.event.inputs.apiBase || secrets.NEXT_PUBLIC_API_BASE }}
        run: npx vercel build --prod --token=${{ env.VERCEL_TOKEN }}

      - name: Deploy
        run: npx vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }}


